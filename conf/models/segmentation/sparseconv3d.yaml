models:
    ResUNet32:
        class: sparseconv3d.APIModel
        conv_type: "SPARSE"
        backend: "torchsparse"
        backbone:
            define_constants:
                in_feat: 32
                block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            down_conv:
                module_name: ResNetDown
                block: block
                N: [0, 1, 2, 2, 3]
                down_conv_nn:
                    [
                        [FEAT, in_feat],
                        [in_feat, in_feat],
                        [in_feat, 2*in_feat],
                        [2*in_feat, 4*in_feat],
                        [4*in_feat, 8*in_feat],
                    ]
                kernel_size: 3
                stride: [1, 2, 2, 2, 2]
            up_conv:
                block: block
                module_name: ResNetUp
                N: [1, 1, 1, 1, 0]
                up_conv_nn:
                    [
                        [8*in_feat, 4*in_feat],
                        [4*in_feat + 4*in_feat, 4*in_feat],
                        [4*in_feat + 2*in_feat, 3*in_feat],
                        [3*in_feat + in_feat, 3*in_feat],
                        [3*in_feat + in_feat, 3*in_feat],
                    ]
                kernel_size: 3
                stride: [2, 2, 2, 2, 1]
    MS_SmallUnet:
        class: sparseconv3d.MS_SparseConvModel
        path_pretrained: "/home/sofiane/Documents/code/dpcb_perso/dpcb_07_09_2020/outputs/2020-11-13/10-56-34/ms_sparseconv3d_shared_pretrained_with_int_loss_large.pt"
        weight_name: "latest"
        conv_type: "SPARSE"
        define_constants:
            num_scales: 3
            output_feat: 32
        backend: "torchsparse"
        normalize_feature: True
        mlp_cls:
            nn: [num_scales*output_feat, output_feat, output_feat]
            bn_momentum: 0.05
        output_nc: output_feat
        option_unet:
            input_nc: 1
            num_scales: num_scales
            grid_size: [0.05, 0.075, 0.1]
            post_mlp_nn: [64, output_feat]
            backbone:
                down_conv:
                    module_name: ResNetDown
                    dimension: 3
                    down_conv_nn:
                        [
                            [FEAT, 32],
                            [32, 64],
                            [64, 128],
                            [128, 256]
                        ]
                    kernel_size: [5, 3, 3, 3]
                    stride: [1, 2, 2, 2]
                    dilation: [1, 1, 1, 1]
                up_conv:
                    module_name: ResNetUp
                    dimension: 3
                    bn_momentum: 0.05
                    up_conv_nn:
                        [
                            [256, 64],
                            [64 + 128, 64],
                            [64 + 64, 64],
                            [64 + 32, 64]
                        ]
                    kernel_size: [3, 3, 3, 3]
                    stride: [2, 2, 2, 1]
                    dilation: [1, 1, 1, 1]
    MS_SmallUnet_Pretrained:
        class: sparseconv3d.MS_SparseConvModel
        conv_type: "SPARSE"
        define_constants:
            num_scales: 3
            output_feat: 32
        backend: "torchsparse"
        normalize_feature: True
        mlp_cls:
            nn: [num_scales*output_feat, output_feat, output_feat]
            bn_momentum: 0.05
        output_nc: output_feat
        option_unet:
            input_nc: 1
            num_scales: num_scales
            grid_size: [0.05, 0.075, 0.1]
            post_mlp_nn: [64, output_feat]
            backbone:
                down_conv:
                    module_name: ResNetDown
                    dimension: 3
                    down_conv_nn:
                        [
                            [FEAT, 32],
                            [32, 64],
                            [64, 128],
                            [128, 256]
                        ]
                    kernel_size: [5, 3, 3, 3]
                    stride: [1, 2, 2, 2]
                    dilation: [1, 1, 1, 1]
                up_conv:
                    module_name: ResNetUp
                    dimension: 3
                    bn_momentum: 0.05
                    up_conv_nn:
                        [
                            [256, 64],
                            [64 + 128, 64],
                            [64 + 64, 64],
                            [64 + 32, 64]
                        ]
                    kernel_size: [3, 3, 3, 3]
                    stride: [2, 2, 2, 1]
                    dilation: [1, 1, 1, 1]
    Res16UNet34:
        class: sparseconv3d.APIModel
        conv_type: "SPARSE"
        backend: "torchsparse"
        backbone:
            define_constants:
                in_feat: 32
                block: ResBlock # Can be any of the blocks in modules/MinkowskiEngine/api_modules.py
            down_conv:
                module_name: ResNetDown
                block: block
                N: [0, 2, 3, 4, 6]
                down_conv_nn:
                    [
                        [FEAT, in_feat],
                        [in_feat, in_feat],
                        [in_feat, 2*in_feat],
                        [2*in_feat, 4*in_feat],
                        [4*in_feat, 8*in_feat],
                    ]
                kernel_size: 3
                stride: [1, 2, 2, 2, 2]
            up_conv:
                block: block
                module_name: ResNetUp
                N: [1, 1, 1, 1, 1]
                up_conv_nn:
                    [
                        [8*in_feat, 4*in_feat],
                        [4*in_feat + 4*in_feat, 4*in_feat],
                        [4*in_feat + 2*in_feat, 3*in_feat],
                        [3*in_feat + in_feat, 3*in_feat],
                        [3*in_feat + in_feat, 3*in_feat],
                    ]
                kernel_size: 3
                stride: [2, 2, 2, 2, 1]
